version: '3'
services:
  app:
    container_name: user_api
    build: .
    ports:
      - 8080:8080
    environment:
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - USER_API_MYSQL_HOST=${USER_API_MYSQL_HOST}
      - USER_API_MYSQL_PASSWORD=${USER_API_MYSQL_PASSWORD}
      - USER_API_MYSQL_USERNAME=${USER_API_MYSQL_USERNAME}
      - USER_API_MYSQL_SINGULAR_TABLE=false
      - USER_API_MYSQL_DB_NAME=${USER_API_MYSQL_DB_NAME}
      - USER_API_REDIS_HOST=${USER_API_REDIS_HOST}
      - USER_API_REDIS_PORT=${USER_API_REDIS_PORT}
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
      - user-api-mysql
      - redis
    networks:
      - user-api


  user-api-mysql:
    image: mysql:latest
    container_name: user_api_mysql
    ports:
      - 3311:3306
    entrypoint:
      sh -c "
      echo 'CREATE DATABASE IF NOT EXISTS user_api' > /docker-entrypoint-initdb.d/init.sql;
      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
      "
    environment:
      - MYSQL_ROOT_HOST=${USER_API_MYSQL_HOST}
      - MYSQL_USER=${USER_API_MYSQL_USERNAME}
      - MYSQL_PASSWORD=${USER_API_MYSQL_PASSWORD}
      - MYSQL_DATABASE=${USER_API_MYSQL_DB_NAME}
      - MYSQL_ROOT_PASSWORD=${USER_API_MYSQL_PASSWORD}
    volumes:
      - database_mysql:/var/lib/mysql
    networks:
      - user-api

  migrate:
    image: migrate/migrate
    depends_on:
      - user-api-mysql
    networks:
      - user-api
    volumes:
      - ./database/migrations/mysql:/migrations

    command: -path=/migrations -database "mysql://${USER_API_MYSQL_USERNAME}:${USER_API_MYSQL_PASSWORD}@tcp(user-api-mysql:3306)/${USER_API_MYSQL_DB_NAME}" up

  redis:
    image: "redis:alpine" # Use a public Redis image to build the redis service
    ports:
      - 6380:6379
    networks:
      - user-api

volumes:
  api:
  database_mysql:

# Networks to be created to facilitate communication between containers
networks:
  user-api:
    driver: bridge